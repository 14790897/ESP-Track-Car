/*
 * ESP32智能跟踪车 - 配置文件模板
 * 
 * 复制此文件内容到你的Arduino项目中，并根据实际情况修改配置参数
 */

#ifndef TRACK_CAR_CONFIG_H
#define TRACK_CAR_CONFIG_H

// ===============================================
// WiFi网络配置
// ===============================================

// 基本WiFi设置
const char* WIFI_SSID = "Your_WiFi_Name";        // 替换为你的WiFi名称
const char* WIFI_PASSWORD = "Your_WiFi_Password"; // 替换为你的WiFi密码

// 静态IP配置（可选，如果使用DHCP请注释掉下面的定义）
#define USE_STATIC_IP true
const char* STATIC_IP = "192.168.1.200";    // 设备IP地址
const char* GATEWAY_IP = "192.168.1.1";     // 路由器IP地址  
const char* SUBNET_MASK = "255.255.255.0";  // 子网掩码
const char* DNS_SERVER = "8.8.8.8";         // DNS服务器

// ===============================================
// 硬件引脚配置
// ===============================================

// LD2450雷达配置
const int RADAR_TX_PIN = 4;  // ESP32的TX引脚，连接LD2450的RX
const int RADAR_RX_PIN = 5;  // ESP32的RX引脚，连接LD2450的TX
const int RADAR_BAUDRATE = 256000;  // LD2450波特率

// 电机驱动引脚（DRV8833双H桥驱动）
// 第一个DRV8833 - 前轮控制
const int MOTOR_LEFT_FRONT_IN1 = 2;   // 左前电机IN1
const int MOTOR_LEFT_FRONT_IN2 = 3;   // 左前电机IN2
const int MOTOR_RIGHT_FRONT_IN1 = 10; // 右前电机IN3  
const int MOTOR_RIGHT_FRONT_IN2 = 6;  // 右前电机IN4

// 第二个DRV8833 - 后轮控制
const int MOTOR_LEFT_REAR_IN1 = 12;   // 左后电机IN5
const int MOTOR_LEFT_REAR_IN2 = 18;   // 左后电机IN6
const int MOTOR_RIGHT_REAR_IN1 = 19;  // 右后电机IN7
const int MOTOR_RIGHT_REAR_IN2 = 13;  // 右后电机IN8

// ===============================================
// 跟踪算法参数
// ===============================================

// 距离控制参数
const double MIN_TRACKING_DISTANCE = 0.3;  // 最小跟踪距离(米)
const double MAX_TRACKING_DISTANCE = 3.0;  // 最大跟踪距离(米)
const double IDEAL_DISTANCE = 0.8;         // 理想跟踪距离(米)

// 角度控制参数
const double ANGLE_THRESHOLD = 30.0;       // 开始转向的角度阈值(度)
const double SEGMENT_TURN_ANGLE = 15.0;    // 分段转向角度(度)
const double ANGLE_TOLERANCE = 5.0;        // 角度容差(度)

// 时间控制参数
const unsigned long TURN_TIME_PER_DEGREE = 80;   // 每度转向时间(毫秒)
const unsigned long DETECTION_PAUSE_TIME = 800;  // 转向后暂停检测时间(毫秒)
const unsigned long TARGET_TIMEOUT = 3000;       // 目标丢失超时(毫秒)
const unsigned long TRACKING_INTERVAL = 100;     // 跟踪循环间隔(毫秒)

// 电机控制参数
const int MOTOR_SPEED_FORWARD = 200;    // 前进速度 (0-255)
const int MOTOR_SPEED_BACKWARD = 150;   // 后退速度 (0-255)
const int MOTOR_SPEED_TURN = 180;       // 转向速度 (0-255)
const unsigned long MOVE_DURATION = 150;       // 单次移动持续时间(毫秒)
const unsigned long STOP_DURATION = 50;        // 停止间隔时间(毫秒)

// ===============================================
// OTA更新配置
// ===============================================

const char* OTA_HOSTNAME = "esp32-track-car";  // OTA主机名
const char* OTA_PASSWORD = "admin123";         // OTA密码
const int OTA_PORT = 3232;                     // OTA端口

// ===============================================
// 调试和日志配置
// ===============================================

#define DEBUG_MODE true                    // 启用调试输出
#define SERIAL_BAUDRATE 115200            // 串口波特率
#define STATUS_REPORT_INTERVAL 10000      // 状态报告间隔(毫秒)

// 调试级别
#define DEBUG_BASIC     1  // 基本信息
#define DEBUG_TRACKING  2  // 跟踪详情  
#define DEBUG_RADAR     3  // 雷达数据
#define DEBUG_MOTOR     4  // 电机控制

#define DEBUG_LEVEL DEBUG_BASIC  // 当前调试级别

// ===============================================
// 系统安全参数
// ===============================================

const unsigned long WATCHDOG_TIMEOUT = 5000;    // 看门狗超时(毫秒)
const int MAX_CONSECUTIVE_ERRORS = 5;            // 最大连续错误次数
const unsigned long ERROR_RESET_TIME = 10000;   // 错误重置时间(毫秒)

// 安全限制
const double EMERGENCY_STOP_DISTANCE = 0.1;     // 紧急停止距离(米)
const unsigned long MAX_CONTINUOUS_MOVE = 2000; // 最大连续移动时间(毫秒)

// ===============================================
// Web界面配置
// ===============================================

const int WEB_SERVER_PORT = 80;           // Web服务器端口
const unsigned long WEB_UPDATE_INTERVAL = 1000;  // Web数据更新间隔(毫秒)

// API超时设置
const unsigned long API_TIMEOUT = 5000;   // API响应超时(毫秒)

// ===============================================
// 预定义配置方案
// ===============================================

// 配置方案1：室内精确跟踪
#ifdef CONFIG_INDOOR_PRECISE
    #undef MIN_TRACKING_DISTANCE
    #undef SEGMENT_TURN_ANGLE
    #undef TURN_TIME_PER_DEGREE
    
    #define MIN_TRACKING_DISTANCE 0.2
    #define SEGMENT_TURN_ANGLE 10.0
    #define TURN_TIME_PER_DEGREE 60
#endif

// 配置方案2：室外远距离跟踪
#ifdef CONFIG_OUTDOOR_LONG_RANGE
    #undef MAX_TRACKING_DISTANCE
    #undef SEGMENT_TURN_ANGLE
    #undef MOTOR_SPEED_FORWARD
    
    #define MAX_TRACKING_DISTANCE 5.0
    #define SEGMENT_TURN_ANGLE 20.0
    #define MOTOR_SPEED_FORWARD 255
#endif

// 配置方案3：演示模式（慢速安全）
#ifdef CONFIG_DEMO_MODE
    #undef MOTOR_SPEED_FORWARD
    #undef MOTOR_SPEED_TURN
    #undef TURN_TIME_PER_DEGREE
    
    #define MOTOR_SPEED_FORWARD 120
    #define MOTOR_SPEED_TURN 100
    #define TURN_TIME_PER_DEGREE 120
#endif

#endif // TRACK_CAR_CONFIG_H

/*
 * 使用说明：
 * 
 * 1. 基本配置：
 *    - 修改WIFI_SSID和WIFI_PASSWORD
 *    - 根据需要配置静态IP
 *    - 检查硬件引脚定义
 * 
 * 2. 预定义方案：
 *    在代码开头添加以下定义之一：
 *    #define CONFIG_INDOOR_PRECISE     // 室内精确模式
 *    #define CONFIG_OUTDOOR_LONG_RANGE // 室外远距离模式  
 *    #define CONFIG_DEMO_MODE          // 演示安全模式
 * 
 * 3. 自定义参数：
 *    直接修改上面的常量定义
 * 
 * 4. 硬件接线：
 *    LD2450雷达:
 *      TX -> GPIO4, RX -> GPIO5, VCC -> 3.3V, GND -> GND
 *    
 *    DRV8833 #1 (前轮):
 *      IN1 -> GPIO2,  IN2 -> GPIO3   (左前电机)
 *      IN3 -> GPIO10, IN4 -> GPIO6   (右前电机)
 *    
 *    DRV8833 #2 (后轮):  
 *      IN5 -> GPIO12, IN6 -> GPIO18  (左后电机)
 *      IN7 -> GPIO19, IN8 -> GPIO13  (右后电机)
 */
